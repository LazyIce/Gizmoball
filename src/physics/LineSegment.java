package physics;/********************************************************************** * Copyright (C) 2000 by the Massachusetts Institute of Technology, *                     Cambridge, Massachusetts. *********************************************************************/import java.io.Serializable;import java.awt.geom.Line2D;/** LineSegment是二维坐标系中线段的抽象*/public final class LineSegment implements Serializable {  private final Vect p1;  private final Vect p2;  /**构造一条从点p1到点p2的线段 */  public LineSegment(Vect p1, Vect p2) {    if ((p1 == null) || (p2 == null)) {      throw new IllegalArgumentException();    }    this.p1 = p1;    this.p2 = p2;  }  /** 构造一个Line2D实例*/  public LineSegment(Line2D l2d) {    this(new Vect(l2d.getP1()), new Vect(l2d.getP2()));  }  /**构造一条从点(x1,y1)到点(x2,y2)的线段*/  public LineSegment(double x1, double y1, double x2, double y2) {    this(new Vect(x1, y1), new Vect(x2, y2));  }  /**得到这条线段的起点*/  public Vect p1() {    return p1;  }  /**得到这条线段的终点*/  public Vect p2() {    return p2;  }  /**获取新的Line2D实例*/  public Line2D.Double toLine2D() {    return new Line2D.Double(p1.x(), p1.y(), p2.x(), p2.y());  }  /**获取线段与x轴的夹角*/  public Angle angle() {    return new Angle(p2.x() - p1.x(), p2.y() - p1.y());  }  /**获取线段的长度*/  public double length() {    return p2.minus(p1).length();  }  public String toString() {    return "LineSegment(" + p1 + "-" + p2 + ")";  }  public boolean equals(LineSegment ls) {    if (ls == null) return false;    return (p1.equals(ls.p1) && p2.equals(ls.p2));  }  public boolean equals(Object o) {    if (o instanceof LineSegment)      return equals((LineSegment) o);    else      return false;  }  public int hashCode() {    return p1.hashCode() + p2.hashCode();  }  }