package physics;import java.lang.Double; // import statement added to mollify javadocimport java.util.Iterator;import physics.Geometry.VectPair;import physics.Geometry.DoublePair;/**************************************************************************** * Copyright (C) 2001 by the Massachusetts Institute of Technology, *                    Cambridge, Massachusetts. ***************************************************************************/public class SimpleGeometry extends GeometryImpl{  public SimpleGeometry(double maximumForesight, int searchForCollisionSlices) {    super(maximumForesight, searchForCollisionSlices);    if (!((searchSlices >= 200) || ((maximumForesight / searchSlices) <= 0.01))) {      throw new IllegalArgumentException();    }  }  protected IntervalList restrictSearchInterval(IntervalList intervals,						double inner_radius,						double outer_radius,						double phi_1,						double phi_2,						double omega,						Vect center,						Circle ball,						Vect velocity)  {    Circle outer_plus_ball =      new Circle(center, outer_radius + ball.getRadius());    DoublePair dp = timeUntilCircleCollision(outer_plus_ball,					     ball.getCenter(), velocity);    if (!dp.areFinite()) {      return new IntervalList();    }    intervals.restrictToInterval(dp.d1, dp.d2);    return intervals;  }}